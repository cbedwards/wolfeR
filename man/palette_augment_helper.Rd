% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/palette_augment_helper.R
\name{palette_augment_helper}
\alias{palette_augment_helper}
\title{Iteratively develop augment dataframe for a palette}
\usage{
palette_augment_helper(
  dat.names,
  augment = NULL,
  palette.name = NULL,
  spellcheck = TRUE,
  plot.palette = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{dat.names}{Character vector of the taxa present in the data.}

\item{augment}{Data frame to augment palette with. Must have two named columns: "name" contains the names of the taxa spelled exactly like in the data, "color" has the associated colors. If not provided, \code{palette_augment_helper()} just compares the data to the palette.}

\item{palette.name}{Optional name of palette to augment. If not given, \code{palette_augment_helper()} just compares the augment with the data, which is useful for developing new palettes from scrach}

\item{spellcheck}{Logical flag for whether or not to provide the names of the palette + augment. Useful for checking for typos between data and palette/augment. But this can take up a lot of screen space: set to FALSE to reduce the printout.}

\item{plot.palette}{Logical flag, defaults to TRUE. If FALSE, \code{palette_augment_helper()} does not plot the joint palette+augment visualization}

\item{verbose}{Logical flag, defaults to TRUE. If false, there is no printed output for successful run. Leave to TRUE unless you have a good reason not to (e.g. when using as an internal check in \code{scale_color_wolfe()}).}
}
\value{
logical, TRUE if the augment works perfectly with the data and palette (if provided), false otherwise. Can be used for internal checks before including augment.
}
\description{
In many cases we will have some of our taxa represented in an existing palette, but may have some new taxa that are not.
In this case, we can create an "augment" dateframe to augment the palette with the missing data.
These augments can be provided directly to \code{scale_color_wolfe()} and \code{scale_fill_wolfe()}, but making them can be a bit of a bother
This function helps iterate through that process. See more details in the readme.
}
\examples{
dat = data.frame(spec = c("arthrobacter", "yaniella", "vibrio", "asclepias", "drosophila"),
vals = rnorm(5))

## first attempt at our augment:
aug = data.frame(name = c("asclepias", "vibrio"),
                 color = c("coral", "blue"))

palette_augment_helper(dat.names=dat$spec,
                       palette.name = "wolfe2014",
                       augment = aug)
}
